// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  phone String
  email String  @unique
  password String
  rol Rol @relation(fields: [rolId], references: [id])
  rolId Int
  tokenSession tokenSession[]
}

model Rol{
  id Int @id @default(autoincrement())
  rol String
  user User[]
}

model tokenSession{
  id Int @id @default(autoincrement())
  token String
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Product {
  id    Int     @id @default(autoincrement())
  name  String
  amount Int
  dateOfArrival DateTime @db.Date
  storageType StorageType @relation(fields: [storageTypeId], references: [id])
  storageTypeId Int
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  description String
  OrderItem OrderItem[]
}

model Category{
  id Int @id @default(autoincrement())
  category String
  products Product[]
}

model StorageType {
  id    Int     @id @default(autoincrement())
  Type String
  products Product[]
}

model Order{
  id Int @id @default(autoincrement())
  client String
  status Status @relation(fields: [statusId], references: [id])
  statusId Int
  creationDate DateTime @db.Date
  deadline DateTime @db.Date
  price Decimal
  OrderItem OrderItem[]
}

model Status{
  id Int @id @default(autoincrement())
  status String
  orders Order[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

